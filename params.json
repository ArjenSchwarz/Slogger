{"name":"Slogger","body":"### Slogger: Social logging script for Day One\r\n\r\n## Description ##\r\n\r\nSlogger indexes various public social services and creates Day One (<http://dayoneapp.com/>) journal entries for them. It allows you to keep a personal journal that collects your online social life automatically, all in one place.\r\n\r\n## Features ##\r\n\r\n- Slogger 2.x uses a plugin architecture to allow easy extension\r\n    - Default plugins:\r\n        -  Gist (gists created in the last 24 hours. Title and description only, logged as a single digest)\r\n        -  Flickr (images uploaded in the last 24 hours, each as an individual post. Can handle multiple accounts)\r\n        -  Last.fm (Scrobbled songs for the current day)\r\n        -  RSS feeds (designed to pull in your blog posts with leading image and excerpt (optionally markdownified). Handles multiple feeds)\r\n        -  Twitter (Tweets and Favorites for the day as digest entries, handles multiple Twitter accounts)\r\n        -  Foursquare (Checkins for the day)\r\n- Slogger can be called with a single argument that is a path to a local image, and an entry will be created for that image.\r\n    - You can use this with a folder action or launchd task to add files from a folder connected to something like <http://IFTTT.com>. Any images added to the watched folder will be turned into journal entries.\r\n        -  Note that Slogger does not delete the original image, so your script needs to move files out of the folder manually to avoid double-processing.\r\n\r\n## Usage ##\r\n\r\n1. From within the Slogger folder, run `./slogger` to create the initial configuration file.\r\n2. Edit the file `slogger_config` that shows up\r\n    - The only option will be 'storage:', which should be set to either 'icloud' or a path to a Dropbox-synced Journal\r\n3. Move plugins you want to use into `./plugins/`, and plugins you want to disable into `./plugins_disabled`.\r\n4. Run `./slogger` again to update the configuration file with enabled plugin options.\r\n5. Edit `slogger_config` and fill in the necessary parameters for listed configuration settings.\r\n6. Next time you run `./slogger`, it will execute the plugins and generate your log entries. Run it manually to test, and then automate it using Lingon (launchd) or other scheduling app.\r\n\r\n## Plugin development ##\r\n\r\n*Documentation coming*. See `plugin_template.rb` to get started.\r\n","tagline":"Social logging script for Day One","note":"Don't delete this file! It's used internally to help with page regeneration.","google":"UA-34296025-1"}